@startuml ChatBot_Container_View
!include <C4/C4_Container>

LAYOUT_TOP_DOWN() 
LAYOUT_WITH_LEGEND()


title ChatBot Container Diagram

Person(user, "User", "A client uses chatbot")

System_Boundary(chat_system, "Chat System") {
    Container(web_app, "Web/Mobile App", "React/Angular/Flutter", "Provides chat interface")
    Container(api_gateway, "API Gateway", "Spring Cloud Gateway", "Routes requests")
    Container(chat_service, "Chat Service", "Spring Boot", "Manages conversations")
    Container(llm_integration, "LLM Integration", "Python Service", "Processes LLM requests")
    Container(db, "Database", "PostgreSQL", "Stores chat history")
    Container(cache, "Cache", "Redis", "Improves performance")
}

System(llm, "LLM API", "OpenAI/Gemini", "Generates AI responses")
System(notifications, "Notification System", "Sends alerts")

' Relationships
Rel(user, web_app, "Uses", "HTTPS")
Rel(notifications, user, "Push/Email/SMS")
Rel(web_app, api_gateway, "API Calls", "REST/WebSocket")
Rel(api_gateway, chat_service, "Routes requests")
Rel(chat_service, llm_integration, "Sends messages")
Rel(llm_integration, llm, "API Calls", "gRPC")
Rel(llm, llm_integration, "Returns responses")
Rel(chat_service, db, "Reads/Writes", "JDBC")
Rel(chat_service, cache, "Caches data")
Rel(api_gateway, db, "Reads session data")
Rel(chat_service, notifications, "Triggers alerts")

legend right
  <<legend>> Container Types
  <#357ABD> Application
  <#5F9EA0> Service
  <#4F4F4F> Database
  <#0099CC> External System
endlegend
@enduml